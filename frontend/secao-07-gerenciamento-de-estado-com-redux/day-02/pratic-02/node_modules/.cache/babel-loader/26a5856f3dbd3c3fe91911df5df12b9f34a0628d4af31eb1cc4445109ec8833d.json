{"ast":null,"code":"// Criar o estado inicial\nimport { combineReducers } from 'redux';\nconst INITIAL_STATE = {\n  theme: 'dark',\n  name: 'light'\n};\n\n//função que decide se vai atualizar ou não a store, que retona o state\n// sempre recebe 2 coisas: estado e action\nconst themeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'CHANGE_THEME':\n      return {\n        ...state,\n        theme: state.theme === 'light' ? 'dark' : 'light'\n      };\n    default:\n      return state;\n  }\n};\nconst rootReducer = combineReducers({\n  themeReducer\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","INITIAL_STATE","theme","name","themeReducer","state","action","type","rootReducer"],"sources":["/home/tainafms/Documentos/Trybe/repo-git-trybe/trybe-exercicios/frontend/secao-07-gerenciamento-de-estado-com-redux/day-02/pratic-02/src/redux/reducers/index.js"],"sourcesContent":["// Criar o estado inicial\nimport { combineReducers } from 'redux';\n\nconst INITIAL_STATE = {\n  theme: 'dark',\n  name: 'light',\n};\n\n//função que decide se vai atualizar ou não a store, que retona o state\n// sempre recebe 2 coisas: estado e action\nconst themeReducer = (state = INITIAL_STATE, action) => {\n switch(action.type) {\n  case 'CHANGE_THEME':\n    return {\n      ...state,\n      theme: state.theme === 'light' ? 'dark' : 'light',\n    }\n  default:\n    return state;\n }\n}\n\nconst rootReducer = combineReducers({ themeReducer })\n\nexport default rootReducer;"],"mappings":"AAAA;AACA,SAASA,eAAe,QAAQ,OAAO;AAEvC,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,MAAM;EACbC,IAAI,EAAE;AACR,CAAC;;AAED;AACA;AACA,MAAMC,YAAY,GAAG,YAAmC;EAAA,IAAlCC,KAAK,uEAAGJ,aAAa;EAAA,IAAEK,MAAM;EAClD,QAAOA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QACL,GAAGF,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG;MAC5C,CAAC;IACH;MACE,OAAOG,KAAK;EAAC;AAEjB,CAAC;AAED,MAAMG,WAAW,GAAGR,eAAe,CAAC;EAAEI;AAAa,CAAC,CAAC;AAErD,eAAeI,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}