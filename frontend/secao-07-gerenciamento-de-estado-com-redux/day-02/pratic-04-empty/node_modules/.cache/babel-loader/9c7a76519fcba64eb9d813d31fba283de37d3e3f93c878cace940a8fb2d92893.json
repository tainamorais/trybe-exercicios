{"ast":null,"code":"var _jsxFileName = \"/home/tainafms/Documentos/Trybe/repo-git-trybe/trybe-exercicios/frontend/secao-07-gerenciamento-de-estado-com-redux/day-02/pratic-04/src/components/LoginForm.jsx\";\nimport React from 'react';\n// import { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n// import { Navigate as Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import loginAction from '../redux/actions/loginActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LoginForm extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      inputUserName: '',\n      submitted: false\n    };\n    this.handleChange = _ref => {\n      let {\n        target: {\n          name,\n          value\n        }\n      } = _ref;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleClick = () => {\n      const {\n        inputUserName\n      } = this.state;\n      // const { dispatch } = this.props;\n      // dispatch(loginAction(inputUserName));\n      const {\n        logUser\n      } = this.props;\n      logUser(inputUserName);\n      this.setState({\n        submitted: true\n      });\n    };\n    this.validateButton = () => {\n      const {\n        inputUserName\n      } = this.state;\n      const minLength = 3;\n      return inputUserName.length > minLength;\n    };\n  }\n  render() {\n    const {\n      inputUserName,\n      submitted\n    } = this.state;\n    if (submitted) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputUserName\",\n          children: [\"Nome\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"inputUserName\",\n            id: \"inputUserName\",\n            placeholder: \"Digite seu nome\",\n            onChange: this.handleChange,\n            value: inputUserName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleClick,\n          disabled: !this.validateButton(),\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"slogan\",\n        children: \"Entre e busque seus X-Men favoritos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n}\nLoginForm.propTypes = {\n  logUser: PropTypes.func.isRequired\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   logUser: (inputUserName) => dispatch(loginAction(inputUserName)),\n// });\n\nexport default LoginForm;\n// export default connect(null, mapDispatchToProps)(LoginForm);","map":{"version":3,"names":["React","Redirect","PropTypes","LoginForm","Component","state","inputUserName","submitted","handleChange","target","name","value","setState","handleClick","logUser","props","validateButton","minLength","length","render","propTypes","func","isRequired"],"sources":["/home/tainafms/Documentos/Trybe/repo-git-trybe/trybe-exercicios/frontend/secao-07-gerenciamento-de-estado-com-redux/day-02/pratic-04/src/components/LoginForm.jsx"],"sourcesContent":["import React from 'react';\n// import { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n// import { Navigate as Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import loginAction from '../redux/actions/loginActions';\n\nclass LoginForm extends React.Component {\n  state = {\n    inputUserName: '',\n    submitted: false,\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleClick = () => {\n    const { inputUserName } = this.state;\n    // const { dispatch } = this.props;\n    // dispatch(loginAction(inputUserName));\n    const { logUser } = this.props;\n    logUser(inputUserName);\n    this.setState({ submitted: true });\n  };\n\n  validateButton = () => {\n    const { inputUserName } = this.state;\n    const minLength = 3;\n    return inputUserName.length > minLength;\n  };\n\n  render() {\n    const { inputUserName, submitted } = this.state;\n\n    if (submitted) return <Redirect to=\"/search\" />;\n    return (\n      <section>\n        <form>\n          <label htmlFor=\"inputUserName\">\n            Nome\n            <input\n              type=\"text\"\n              name=\"inputUserName\"\n              id=\"inputUserName\"\n              placeholder=\"Digite seu nome\"\n              onChange={ this.handleChange }\n              value={ inputUserName }\n            />\n          </label>\n\n          <button\n            type=\"button\"\n            onClick={ this.handleClick }\n            disabled={ !this.validateButton() }\n          >\n            Entrar\n          </button>\n        </form>\n        <small className=\"slogan\">\n          Entre e busque seus X-Men favoritos\n        </small>\n      </section>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  logUser: PropTypes.func.isRequired,\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   logUser: (inputUserName) => dispatch(loginAction(inputUserName)),\n// });\n\nexport default LoginForm;\n// export default connect(null, mapDispatchToProps)(LoginForm);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C;AACA,OAAOC,SAAS,MAAM,YAAY;AAClC;AAAA;AAEA,MAAMC,SAAS,SAASH,KAAK,CAACI,SAAS,CAAC;EAAA;IAAA;IAAA,KACtCC,KAAK,GAAG;MACNC,aAAa,EAAE,EAAE;MACjBC,SAAS,EAAE;IACb,CAAC;IAAA,KAEDC,YAAY,GAAG,QAAiC;MAAA,IAAhC;QAAEC,MAAM,EAAE;UAAEC,IAAI;UAAEC;QAAM;MAAE,CAAC;MACzC,IAAI,CAACC,QAAQ,CAAC;QAAE,CAACF,IAAI,GAAGC;MAAM,CAAC,CAAC;IAClC,CAAC;IAAA,KAEDE,WAAW,GAAG,MAAM;MAClB,MAAM;QAAEP;MAAc,CAAC,GAAG,IAAI,CAACD,KAAK;MACpC;MACA;MACA,MAAM;QAAES;MAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;MAC9BD,OAAO,CAACR,aAAa,CAAC;MACtB,IAAI,CAACM,QAAQ,CAAC;QAAEL,SAAS,EAAE;MAAK,CAAC,CAAC;IACpC,CAAC;IAAA,KAEDS,cAAc,GAAG,MAAM;MACrB,MAAM;QAAEV;MAAc,CAAC,GAAG,IAAI,CAACD,KAAK;MACpC,MAAMY,SAAS,GAAG,CAAC;MACnB,OAAOX,aAAa,CAACY,MAAM,GAAGD,SAAS;IACzC,CAAC;EAAA;EAEDE,MAAM,GAAG;IACP,MAAM;MAAEb,aAAa;MAAEC;IAAU,CAAC,GAAG,IAAI,CAACF,KAAK;IAE/C,IAAIE,SAAS,EAAE,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;IAC/C,oBACE;MAAA,wBACE;QAAA,wBACE;UAAO,OAAO,EAAC,eAAe;UAAA,gCAE5B;YACE,IAAI,EAAC,MAAM;YACX,IAAI,EAAC,eAAe;YACpB,EAAE,EAAC,eAAe;YAClB,WAAW,EAAC,iBAAiB;YAC7B,QAAQ,EAAG,IAAI,CAACC,YAAc;YAC9B,KAAK,EAAGF;UAAe;YAAA;YAAA;YAAA;UAAA,QACvB;QAAA;UAAA;UAAA;UAAA;QAAA,QACI,eAER;UACE,IAAI,EAAC,QAAQ;UACb,OAAO,EAAG,IAAI,CAACO,WAAa;UAC5B,QAAQ,EAAG,CAAC,IAAI,CAACG,cAAc,EAAI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAG5B;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ,eACP;QAAO,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEjB;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAEd;AACF;AAEAb,SAAS,CAACiB,SAAS,GAAG;EACpBN,OAAO,EAAEZ,SAAS,CAACmB,IAAI,CAACC;AAC1B,CAAC;;AAED;AACA;AACA;;AAEA,eAAenB,SAAS;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}