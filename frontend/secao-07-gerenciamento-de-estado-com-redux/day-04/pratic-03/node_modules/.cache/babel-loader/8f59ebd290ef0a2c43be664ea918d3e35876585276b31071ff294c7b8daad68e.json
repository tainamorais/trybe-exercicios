{"ast":null,"code":"var _jsxFileName = \"/home/tainafms/Documentos/Trybe/repo-git-trybe/trybe-exercicios/frontend/secao-07-gerenciamento-de-estado-com-redux/day-04/pratic-03/src/pages/Dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport addTaskAction from '../redux/actions/addTaskAction';\n// import PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Dashboard extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      task: '',\n      owner: ''\n    };\n    this.handleChange = _ref => {\n      let {\n        target: {\n          name,\n          value\n        }\n      } = _ref;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleClick = () => {\n      const {\n        task,\n        owner\n      } = this.state;\n      const {\n        logUserDispatch,\n        history\n      } = this.props;\n      logUserDispatch(email, password);\n      this.setState({\n        email: '',\n        password: ''\n      });\n      history.push('/dashboard');\n    };\n  }\n  render() {\n    const {\n      email,\n      password\n    } = this.props;\n    const {\n      task,\n      owner\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Task\",\n          onChange: this.handleChange,\n          value: task,\n          name: \"task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Owner\",\n          onChange: this.handleChange,\n          value: owner,\n          name: \"owner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleClick,\n          children: \"Inserir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  password: state.user.password\n});\nconst mapDispatchToProps = dispatch => ({\n  taskDispatch: (task, owner) => dispatch(addTaskAction(task, owner))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"names":["React","Component","connect","addTaskAction","Dashboard","state","task","owner","handleChange","target","name","value","setState","handleClick","logUserDispatch","history","props","email","password","push","render","mapStateToProps","user","mapDispatchToProps","dispatch","taskDispatch"],"sources":["/home/tainafms/Documentos/Trybe/repo-git-trybe/trybe-exercicios/frontend/secao-07-gerenciamento-de-estado-com-redux/day-04/pratic-03/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport addTaskAction from '../redux/actions/addTaskAction';\n// import PropTypes from 'prop-types';\n\nclass Dashboard extends Component {\n  state = {\n    task:'',\n    owner:'',\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleClick = () =>{\n    const { task, owner } = this.state;\n    const { logUserDispatch, history } = this.props;\n    logUserDispatch(email, password);\n    this.setState({\n      email:'',\n      password:'',\n    })\n    history.push('/dashboard');\n  }\n\n  render() {\n    const { email, password } = this.props;\n    const { task, owner } = this.state;\n    return (\n      <div>\n        <div>\n          <p>{ email }</p>\n          <p>{ password }</p>\n        </div>\n        <div>\n        <input\n          type=\"text\"\n          placeholder='Task'\n          onChange={ this.handleChange }\n          value={ task }\n          name=\"task\"\n        />\n\n        <input\n          type=\"text\"\n          placeholder='Owner'\n          onChange={ this.handleChange }\n          value={ owner }\n          name=\"owner\"\n        />\n\n\n        <button\n          type='button'\n          onClick={ this.handleClick }\n        >\n          Inserir\n        </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  password: state.user.password,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  taskDispatch: (task, owner) => dispatch(addTaskAction(task, owner)),\n});\n\nexport default connect (mapStateToProps, mapDispatchToProps)(Dashboard);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,aAAa,MAAM,gCAAgC;AAC1D;AAAA;AAEA,MAAMC,SAAS,SAASH,SAAS,CAAC;EAAA;IAAA;IAAA,KAChCI,KAAK,GAAG;MACNC,IAAI,EAAC,EAAE;MACPC,KAAK,EAAC;IACR,CAAC;IAAA,KAEDC,YAAY,GAAG,QAAiC;MAAA,IAAhC;QAAEC,MAAM,EAAE;UAAEC,IAAI;UAAEC;QAAM;MAAE,CAAC;MACzC,IAAI,CAACC,QAAQ,CAAC;QAAE,CAACF,IAAI,GAAGC;MAAM,CAAC,CAAC;IAClC,CAAC;IAAA,KAEDE,WAAW,GAAG,MAAK;MACjB,MAAM;QAAEP,IAAI;QAAEC;MAAM,CAAC,GAAG,IAAI,CAACF,KAAK;MAClC,MAAM;QAAES,eAAe;QAAEC;MAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;MAC/CF,eAAe,CAACG,KAAK,EAAEC,QAAQ,CAAC;MAChC,IAAI,CAACN,QAAQ,CAAC;QACZK,KAAK,EAAC,EAAE;QACRC,QAAQ,EAAC;MACX,CAAC,CAAC;MACFH,OAAO,CAACI,IAAI,CAAC,YAAY,CAAC;IAC5B,CAAC;EAAA;EAEDC,MAAM,GAAG;IACP,MAAM;MAAEH,KAAK;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACF,KAAK;IACtC,MAAM;MAAEV,IAAI;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACF,KAAK;IAClC,oBACE;MAAA,wBACE;QAAA,wBACE;UAAA,UAAKY;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAChB;UAAA,UAAKC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACf,eACN;QAAA,wBACA;UACE,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,MAAM;UAClB,QAAQ,EAAG,IAAI,CAACV,YAAc;UAC9B,KAAK,EAAGF,IAAM;UACd,IAAI,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QACX,eAEF;UACE,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,OAAO;UACnB,QAAQ,EAAG,IAAI,CAACE,YAAc;UAC9B,KAAK,EAAGD,KAAO;UACf,IAAI,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QACZ,eAGF;UACE,IAAI,EAAC,QAAQ;UACb,OAAO,EAAG,IAAI,CAACM,WAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAGrB;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;AAEA,MAAMQ,eAAe,GAAIhB,KAAK,KAAM;EAClCY,KAAK,EAAEZ,KAAK,CAACiB,IAAI,CAACL,KAAK;EACvBC,QAAQ,EAAEb,KAAK,CAACiB,IAAI,CAACJ;AACvB,CAAC,CAAC;AAEF,MAAMK,kBAAkB,GAAIC,QAAQ,KAAM;EACxCC,YAAY,EAAE,CAACnB,IAAI,EAAEC,KAAK,KAAKiB,QAAQ,CAACrB,aAAa,CAACG,IAAI,EAAEC,KAAK,CAAC;AACpE,CAAC,CAAC;AAEF,eAAeL,OAAO,CAAEmB,eAAe,EAAEE,kBAAkB,CAAC,CAACnB,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}