{"ast":null,"code":"var _jsxFileName = \"/home/tainafms/Documentos/Trybe/repo-git-trybe/trybe-exercicios/frontend/secao-07-gerenciamento-de-estado-com-redux/day-04/pratic-03/src/pages/Login.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport getUserAction from '../redux/actions/getUserAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = _ref => {\n      let {\n        target: {\n          name,\n          value\n        }\n      } = _ref;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleClick = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        logUserDispatch,\n        history\n      } = this.props;\n      logUserDispatch(email, password);\n      this.setState({\n        email: '',\n        password: ''\n      });\n      history.push('/das');\n    };\n  }\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: this.handleChange,\n        value: email,\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: this.handleChange,\n        name: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.handleClick,\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  logUserDispatch: (email, password) => dispatch(getUserAction(email, password))\n});\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"names":["React","Component","connect","getUserAction","Login","state","email","password","handleChange","target","name","value","setState","handleClick","logUserDispatch","history","props","push","render","mapDispatchToProps","dispatch"],"sources":["/home/tainafms/Documentos/Trybe/repo-git-trybe/trybe-exercicios/frontend/secao-07-gerenciamento-de-estado-com-redux/day-04/pratic-03/src/pages/Login.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport getUserAction from '../redux/actions/getUserAction';\n\nclass Login extends Component {\n  state = {\n    email:'',\n    password:'',\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleClick = () =>{\n    const { email, password } = this.state;\n    const { logUserDispatch, history } = this.props;\n    logUserDispatch(email, password);\n    this.setState({\n      email:'',\n      password:'',\n    })\n    history.push('/das')\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div>\n        <h2>Login</h2>\n        <input\n          type=\"email\"\n          placeholder='Email'\n          onChange={ this.handleChange }\n          value={ email }\n          name=\"email\"\n        />\n\n        <input\n          type=\"password\"\n          placeholder='Password'\n          onChange={ this.handleChange }\n          name=\"password\"\n          value={ password }\n        />\n\n        <button\n          type='button'\n          onClick={ this.handleClick }\n        >\n          Entrar\n        </button>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  logUserDispatch: (email, password) => dispatch(getUserAction(email, password)),\n});\n\nexport default connect (null, mapDispatchToProps)(Login);\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,aAAa,MAAM,gCAAgC;AAAC;AAE3D,MAAMC,KAAK,SAASH,SAAS,CAAC;EAAA;IAAA;IAAA,KAC5BI,KAAK,GAAG;MACNC,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC;IACX,CAAC;IAAA,KAEDC,YAAY,GAAG,QAAiC;MAAA,IAAhC;QAAEC,MAAM,EAAE;UAAEC,IAAI;UAAEC;QAAM;MAAE,CAAC;MACzC,IAAI,CAACC,QAAQ,CAAC;QAAE,CAACF,IAAI,GAAGC;MAAM,CAAC,CAAC;IAClC,CAAC;IAAA,KAEDE,WAAW,GAAG,MAAK;MACjB,MAAM;QAAEP,KAAK;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACF,KAAK;MACtC,MAAM;QAAES,eAAe;QAAEC;MAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;MAC/CF,eAAe,CAACR,KAAK,EAAEC,QAAQ,CAAC;MAChC,IAAI,CAACK,QAAQ,CAAC;QACZN,KAAK,EAAC,EAAE;QACRC,QAAQ,EAAC;MACX,CAAC,CAAC;MACFQ,OAAO,CAACE,IAAI,CAAC,MAAM,CAAC;IACtB,CAAC;EAAA;EAEDC,MAAM,GAAG;IACP,MAAM;MAAEZ,KAAK;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACF,KAAK;IACtC,oBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACd;QACE,IAAI,EAAC,OAAO;QACZ,WAAW,EAAC,OAAO;QACnB,QAAQ,EAAG,IAAI,CAACG,YAAc;QAC9B,KAAK,EAAGF,KAAO;QACf,IAAI,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QACZ,eAEF;QACE,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,UAAU;QACtB,QAAQ,EAAG,IAAI,CAACE,YAAc;QAC9B,IAAI,EAAC,UAAU;QACf,KAAK,EAAGD;MAAU;QAAA;QAAA;QAAA;MAAA,QAClB,eAEF;QACE,IAAI,EAAC,QAAQ;QACb,OAAO,EAAG,IAAI,CAACM,WAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGrB;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAEV;AACF;AAEA,MAAMM,kBAAkB,GAAIC,QAAQ,KAAM;EACxCN,eAAe,EAAE,CAACR,KAAK,EAAEC,QAAQ,KAAKa,QAAQ,CAACjB,aAAa,CAACG,KAAK,EAAEC,QAAQ,CAAC;AAC/E,CAAC,CAAC;AAEF,eAAeL,OAAO,CAAE,IAAI,EAAEiB,kBAAkB,CAAC,CAACf,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}